package com.wedding.photographer.model;

import jakarta.persistence.*; // Import all necessary JPA annotations

@Entity // Marks this class as a JPA entity
@Table(name = "photographers") // Maps this entity to a database table named 'photographers'
public class Photographer {
    @Id // Marks 'id' as the primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Configures ID to be auto-incremented by the database
    private Long id;

    private String name;
    private String location;
    private boolean available; // For general availability, not by date

    // --- NEWLY ADDED FIELDS based on your table schema ---
    @Column(name = "price") // Explicitly map to 'price' column in the DB
    private Double price; // Using Double for monetary values

    @Column(name = "style") // Explicitly map to 'style' column in the DB
    private String style;

    @Column(name = "rating") // Explicitly map to 'rating' column in the DB
    private Integer rating;   // Rating out of 5

    @Column(name = "images") // Explicitly map to 'images' column in the DB
    private String images;    // Path or URL to the photographer's image

    // Default constructor is required by JPA
    public Photographer(){}

    // Constructor for creating new Photographers without an ID (ID will be generated by the DB)
    public Photographer(String name, String location, boolean available, String images, Double price, String style, Integer rating){
        this.name = name;
        this.location = location;
        this.available = available;
        this.images = images;
        this.price = price;
        this.style = style;
        this.rating = rating;
    }

    // Full constructor (useful for fetching from DB, but not for new entity creation)
    public Photographer(Long id, String name, String location, boolean available, String images, Double price, String style, Integer rating){
        this.id = id;
        this.name = name;
        this.location = location;
        this.available = available;
        this.images = images;
        this.price = price;
        this.style = style;
        this.rating = rating;
    }

    // Getters and Setters for existing fields
    public Long getId() {return id;}
    public void setId(Long id) {this.id = id;}
    public String getName() {return name;}
    public void setName(String name) {this.name = name;}
    public String getLocation() {return location;}
    public void setLocation(String location) {this.location = location;}
    public boolean isAvailable() {return available;}
    public void setAvailable(boolean available) {this.available = available;}

    // --- NEWLY ADDED GETTERS AND SETTERS for price, style, rating, images ---
    public Double getPrice() { return price; }
    public void setPrice(Double price) { this.price = price; }

    public String getStyle() { return style; }
    public void setStyle(String style) { this.style = style; }

    public Integer getRating() { return rating; }
    public void setRating(Integer rating) { this.rating = rating; }

    public String getImages() { return images; }
    public void setImages(String images) { this.images = images; }


    @Override
    public String toString(){
        return "Photographer{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", location='" + location + '\'' +
                ", available=" + available +
                ", price=" + price +
                ", style='" + style + '\'' +
                ", rating=" + rating +
                ", images='" + images + '\'' +
                '}';
    }
}